What is the Serialization and deseiralization in Java.

We use Java to create objects. These objects are 
stored in memory and removed by the garbage collector 
once theyâ€™re no longer being used. If we want to 
transfer an object and, for instance, store it on a 
disk or send it over a network, we need to transform 
it into a byte stream. To do this, the class of that 
object needs to implement the Serializable interface. 
As we discussed earlier, serialization allows us to 
convert the state of an object into a byte stream. 
This byte stream does not contain the actual code.


Deserialization is precisely the opposite of 
serialization. With deserialization, you start 
with a byte stream and re-create the object you 
previously serialized in its original state. 
However, you must have the 
definition of the object to successfully re-create it.